'use strict';

require('fragmented');

require('./easyui-jsx');

var easyui = require('easyui'),
    Element = easyui.Element;


var Contents = require('./docs/sections/contents'),
    Introduction = require('./docs/sections/introduction'),
    JSXIsGreat = require('./docs/sections/jsxIsGreat'),
    GettingStarted = require('./docs/sections/gettingStarted'),
    AppendingElementsToTheDOM = require('./docs/sections/appendingElementsToTheDOM'),
    FunctionalElements = require('./docs/sections/functionalElements'),
    EasyUIElements = require('./docs/sections/easyUIElements'),
    TheRenderMethod = require('./docs/sections/theRenderMethod'),
    ExtendingAnEasyUIClass = require('./docs/sections/extendingAnEasyUIClass'),
    TheExampleOfThisDocumentation = require('./docs/sections/theExampleOfThisDocumentation'),
    TheElementClass = require('./docs/sections/theElementClass'),
    ASimpleForm = require('./docs/sections/aSimpleForm');

var introduction = React.createElement(Introduction, null),
    fragmentToSectionMap = {
  introduction: introduction,
  contents: React.createElement(Contents, null),
  jsxIsGreat: React.createElement(JSXIsGreat, null),
  gettingStarted: React.createElement(GettingStarted, null),
  appendingElementsToTheDOM: React.createElement(AppendingElementsToTheDOM, null),
  functionalElements: React.createElement(FunctionalElements, null),
  easyUIElements: React.createElement(EasyUIElements, null),
  theRenderMethod: React.createElement(TheRenderMethod, null),
  extendingAnEasyUIClass: React.createElement(ExtendingAnEasyUIClass, null),
  theExampleOfThisDocumentation: React.createElement(TheExampleOfThisDocumentation, null),
  theElementClass: React.createElement(TheElementClass, null),
  aSimpleForm: React.createElement(ASimpleForm, null)
};

var insertSections = function insertSections() {
  var headerDOMElement = document.querySelector('header'),
      header = Element.fromDOMElement(headerDOMElement);

  forEachSection(function (section) {
    section.insertAfter(header);
  });
};

var revealSection = function revealSection() {
  forEachSection(function (section) {
    section.hide();
  });

  var section = fragmentToSectionMap[fragment] || introduction;

  section.show();
};

var forEachSection = function forEachSection(callback) {
  var fragments = Object.keys(fragmentToSectionMap);

  fragments.forEach(function (fragment) {
    var section = fragmentToSectionMap[fragment];

    callback(section);
  });
};

insertSections();

fragment.onChange(revealSection);

revealSection();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9kb2NzLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJFbGVtZW50IiwiZWFzeXVpIiwiQ29udGVudHMiLCJJbnRyb2R1Y3Rpb24iLCJKU1hJc0dyZWF0IiwiR2V0dGluZ1N0YXJ0ZWQiLCJBcHBlbmRpbmdFbGVtZW50c1RvVGhlRE9NIiwiRnVuY3Rpb25hbEVsZW1lbnRzIiwiRWFzeVVJRWxlbWVudHMiLCJUaGVSZW5kZXJNZXRob2QiLCJFeHRlbmRpbmdBbkVhc3lVSUNsYXNzIiwiVGhlRXhhbXBsZU9mVGhpc0RvY3VtZW50YXRpb24iLCJUaGVFbGVtZW50Q2xhc3MiLCJBU2ltcGxlRm9ybSIsImludHJvZHVjdGlvbiIsImZyYWdtZW50VG9TZWN0aW9uTWFwIiwiY29udGVudHMiLCJqc3hJc0dyZWF0IiwiZ2V0dGluZ1N0YXJ0ZWQiLCJhcHBlbmRpbmdFbGVtZW50c1RvVGhlRE9NIiwiZnVuY3Rpb25hbEVsZW1lbnRzIiwiZWFzeVVJRWxlbWVudHMiLCJ0aGVSZW5kZXJNZXRob2QiLCJleHRlbmRpbmdBbkVhc3lVSUNsYXNzIiwidGhlRXhhbXBsZU9mVGhpc0RvY3VtZW50YXRpb24iLCJ0aGVFbGVtZW50Q2xhc3MiLCJhU2ltcGxlRm9ybSIsImluc2VydFNlY3Rpb25zIiwiaGVhZGVyRE9NRWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImhlYWRlciIsImZyb21ET01FbGVtZW50IiwiZm9yRWFjaFNlY3Rpb24iLCJzZWN0aW9uIiwiaW5zZXJ0QWZ0ZXIiLCJyZXZlYWxTZWN0aW9uIiwiaGlkZSIsImZyYWdtZW50Iiwic2hvdyIsImNhbGxiYWNrIiwiZnJhZ21lbnRzIiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJvbkNoYW5nZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLFFBQVEsWUFBUjs7QUFFQUEsUUFBUSxjQUFSOztBQUVNLGFBQVNBLFFBQVEsUUFBUixDQUFUO0FBQUEsSUFDRUMsT0FERixHQUNjQyxNQURkLENBQ0VELE9BREY7OztBQUdOLElBQU1FLFdBQVdILFFBQVEsMEJBQVIsQ0FBakI7QUFBQSxJQUNNSSxlQUFlSixRQUFRLDhCQUFSLENBRHJCO0FBQUEsSUFFTUssYUFBYUwsUUFBUSw0QkFBUixDQUZuQjtBQUFBLElBR01NLGlCQUFpQk4sUUFBUSxnQ0FBUixDQUh2QjtBQUFBLElBSU1PLDRCQUE0QlAsUUFBUSwyQ0FBUixDQUpsQztBQUFBLElBS01RLHFCQUFxQlIsUUFBUSxvQ0FBUixDQUwzQjtBQUFBLElBTU1TLGlCQUFpQlQsUUFBUSxnQ0FBUixDQU52QjtBQUFBLElBT01VLGtCQUFrQlYsUUFBUSxpQ0FBUixDQVB4QjtBQUFBLElBUU1XLHlCQUF5QlgsUUFBUSx3Q0FBUixDQVIvQjtBQUFBLElBU01ZLGdDQUFnQ1osUUFBUSwrQ0FBUixDQVR0QztBQUFBLElBVU1hLGtCQUFrQmIsUUFBUSxpQ0FBUixDQVZ4QjtBQUFBLElBV01jLGNBQWNkLFFBQVEsNkJBQVIsQ0FYcEI7O0FBYUEsSUFBTWUsZUFBZSxvQkFBQyxZQUFELE9BQXJCO0FBQUEsSUFDTUMsdUJBQXVCO0FBQ3JCRCxnQkFBY0EsWUFETztBQUVyQkUsWUFBVSxvQkFBQyxRQUFELE9BRlc7QUFHckJDLGNBQVksb0JBQUMsVUFBRCxPQUhTO0FBSXJCQyxrQkFBZ0Isb0JBQUMsY0FBRCxPQUpLO0FBS3JCQyw2QkFBMkIsb0JBQUMseUJBQUQsT0FMTjtBQU1yQkMsc0JBQW9CLG9CQUFDLGtCQUFELE9BTkM7QUFPckJDLGtCQUFnQixvQkFBQyxjQUFELE9BUEs7QUFRckJDLG1CQUFpQixvQkFBQyxlQUFELE9BUkk7QUFTckJDLDBCQUF3QixvQkFBQyxzQkFBRCxPQVRIO0FBVXJCQyxpQ0FBK0Isb0JBQUMsNkJBQUQsT0FWVjtBQVdyQkMsbUJBQWlCLG9CQUFDLGVBQUQsT0FYSTtBQVlyQkMsZUFBYSxvQkFBQyxXQUFEO0FBWlEsQ0FEN0I7O0FBZ0JBLElBQU1DLGlCQUFpQixTQUFqQkEsY0FBaUIsR0FBTTtBQUMzQixNQUFNQyxtQkFBbUJDLFNBQVNDLGFBQVQsQ0FBdUIsUUFBdkIsQ0FBekI7QUFBQSxNQUNNQyxTQUFTL0IsUUFBUWdDLGNBQVIsQ0FBdUJKLGdCQUF2QixDQURmOztBQUdBSyxpQkFBZSxVQUFDQyxPQUFELEVBQWE7QUFDMUJBLFlBQVFDLFdBQVIsQ0FBb0JKLE1BQXBCO0FBQ0QsR0FGRDtBQUdELENBUEQ7O0FBU0EsSUFBTUssZ0JBQWdCLFNBQWhCQSxhQUFnQixHQUFNO0FBQzFCSCxpQkFBZSxVQUFDQyxPQUFELEVBQWE7QUFDMUJBLFlBQVFHLElBQVI7QUFDRCxHQUZEOztBQUlBLE1BQU1ILFVBQVVuQixxQkFBcUJ1QixRQUFyQixLQUFrQ3hCLFlBQWxEOztBQUVBb0IsVUFBUUssSUFBUjtBQUNELENBUkQ7O0FBVUEsSUFBTU4saUJBQWlCLFNBQWpCQSxjQUFpQixDQUFDTyxRQUFELEVBQWM7QUFDbkMsTUFBTUMsWUFBWUMsT0FBT0MsSUFBUCxDQUFZNUIsb0JBQVosQ0FBbEI7O0FBRUEwQixZQUFVRyxPQUFWLENBQWtCLFVBQUNOLFFBQUQsRUFBYztBQUM5QixRQUFNSixVQUFVbkIscUJBQXFCdUIsUUFBckIsQ0FBaEI7O0FBRUFFLGFBQVNOLE9BQVQ7QUFDRCxHQUpEO0FBS0QsQ0FSRDs7QUFVQVA7O0FBRUFXLFNBQVNPLFFBQVQsQ0FBa0JULGFBQWxCOztBQUVBQSIsImZpbGUiOiJkb2NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5yZXF1aXJlKCdmcmFnbWVudGVkJyk7XG5cbnJlcXVpcmUoJy4vZWFzeXVpLWpzeCcpO1xuXG5jb25zdCBlYXN5dWkgPSByZXF1aXJlKCdlYXN5dWknKSxcbiAgICAgIHsgRWxlbWVudCB9ID0gZWFzeXVpO1xuXG5jb25zdCBDb250ZW50cyA9IHJlcXVpcmUoJy4vZG9jcy9zZWN0aW9ucy9jb250ZW50cycpLFxuICAgICAgSW50cm9kdWN0aW9uID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL2ludHJvZHVjdGlvbicpLFxuICAgICAgSlNYSXNHcmVhdCA9IHJlcXVpcmUoJy4vZG9jcy9zZWN0aW9ucy9qc3hJc0dyZWF0JyksXG4gICAgICBHZXR0aW5nU3RhcnRlZCA9IHJlcXVpcmUoJy4vZG9jcy9zZWN0aW9ucy9nZXR0aW5nU3RhcnRlZCcpLFxuICAgICAgQXBwZW5kaW5nRWxlbWVudHNUb1RoZURPTSA9IHJlcXVpcmUoJy4vZG9jcy9zZWN0aW9ucy9hcHBlbmRpbmdFbGVtZW50c1RvVGhlRE9NJyksXG4gICAgICBGdW5jdGlvbmFsRWxlbWVudHMgPSByZXF1aXJlKCcuL2RvY3Mvc2VjdGlvbnMvZnVuY3Rpb25hbEVsZW1lbnRzJyksXG4gICAgICBFYXN5VUlFbGVtZW50cyA9IHJlcXVpcmUoJy4vZG9jcy9zZWN0aW9ucy9lYXN5VUlFbGVtZW50cycpLFxuICAgICAgVGhlUmVuZGVyTWV0aG9kID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL3RoZVJlbmRlck1ldGhvZCcpLFxuICAgICAgRXh0ZW5kaW5nQW5FYXN5VUlDbGFzcyA9IHJlcXVpcmUoJy4vZG9jcy9zZWN0aW9ucy9leHRlbmRpbmdBbkVhc3lVSUNsYXNzJyksXG4gICAgICBUaGVFeGFtcGxlT2ZUaGlzRG9jdW1lbnRhdGlvbiA9IHJlcXVpcmUoJy4vZG9jcy9zZWN0aW9ucy90aGVFeGFtcGxlT2ZUaGlzRG9jdW1lbnRhdGlvbicpLFxuICAgICAgVGhlRWxlbWVudENsYXNzID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL3RoZUVsZW1lbnRDbGFzcycpLFxuICAgICAgQVNpbXBsZUZvcm0gPSByZXF1aXJlKCcuL2RvY3Mvc2VjdGlvbnMvYVNpbXBsZUZvcm0nKTtcblxuY29uc3QgaW50cm9kdWN0aW9uID0gPEludHJvZHVjdGlvbiAvPixcbiAgICAgIGZyYWdtZW50VG9TZWN0aW9uTWFwID0ge1xuICAgICAgICBpbnRyb2R1Y3Rpb246IGludHJvZHVjdGlvbixcbiAgICAgICAgY29udGVudHM6IDxDb250ZW50cyAvPixcbiAgICAgICAganN4SXNHcmVhdDogPEpTWElzR3JlYXQgLz4sXG4gICAgICAgIGdldHRpbmdTdGFydGVkOiA8R2V0dGluZ1N0YXJ0ZWQgLz4sXG4gICAgICAgIGFwcGVuZGluZ0VsZW1lbnRzVG9UaGVET006IDxBcHBlbmRpbmdFbGVtZW50c1RvVGhlRE9NIC8+LFxuICAgICAgICBmdW5jdGlvbmFsRWxlbWVudHM6IDxGdW5jdGlvbmFsRWxlbWVudHMgLz4sXG4gICAgICAgIGVhc3lVSUVsZW1lbnRzOiA8RWFzeVVJRWxlbWVudHMgLz4sXG4gICAgICAgIHRoZVJlbmRlck1ldGhvZDogPFRoZVJlbmRlck1ldGhvZCAvPixcbiAgICAgICAgZXh0ZW5kaW5nQW5FYXN5VUlDbGFzczogPEV4dGVuZGluZ0FuRWFzeVVJQ2xhc3MgLz4sXG4gICAgICAgIHRoZUV4YW1wbGVPZlRoaXNEb2N1bWVudGF0aW9uOiA8VGhlRXhhbXBsZU9mVGhpc0RvY3VtZW50YXRpb24gLz4sXG4gICAgICAgIHRoZUVsZW1lbnRDbGFzczogPFRoZUVsZW1lbnRDbGFzcyAvPixcbiAgICAgICAgYVNpbXBsZUZvcm06IDxBU2ltcGxlRm9ybSAvPiBcbiAgICAgIH07XG5cbmNvbnN0IGluc2VydFNlY3Rpb25zID0gKCkgPT4ge1xuICBjb25zdCBoZWFkZXJET01FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaGVhZGVyJyksXG4gICAgICAgIGhlYWRlciA9IEVsZW1lbnQuZnJvbURPTUVsZW1lbnQoaGVhZGVyRE9NRWxlbWVudCk7XG5cbiAgZm9yRWFjaFNlY3Rpb24oKHNlY3Rpb24pID0+IHtcbiAgICBzZWN0aW9uLmluc2VydEFmdGVyKGhlYWRlcik7XG4gIH0pO1xufTtcblxuY29uc3QgcmV2ZWFsU2VjdGlvbiA9ICgpID0+IHtcbiAgZm9yRWFjaFNlY3Rpb24oKHNlY3Rpb24pID0+IHtcbiAgICBzZWN0aW9uLmhpZGUoKTtcbiAgfSk7XG5cbiAgY29uc3Qgc2VjdGlvbiA9IGZyYWdtZW50VG9TZWN0aW9uTWFwW2ZyYWdtZW50XSB8fCBpbnRyb2R1Y3Rpb247XG5cbiAgc2VjdGlvbi5zaG93KCk7XG59O1xuXG5jb25zdCBmb3JFYWNoU2VjdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICBjb25zdCBmcmFnbWVudHMgPSBPYmplY3Qua2V5cyhmcmFnbWVudFRvU2VjdGlvbk1hcCk7XG5cbiAgZnJhZ21lbnRzLmZvckVhY2goKGZyYWdtZW50KSA9PiB7XG4gICAgY29uc3Qgc2VjdGlvbiA9IGZyYWdtZW50VG9TZWN0aW9uTWFwW2ZyYWdtZW50XTtcblxuICAgIGNhbGxiYWNrKHNlY3Rpb24pO1xuICB9KTtcbn07XG5cbmluc2VydFNlY3Rpb25zKCk7XG5cbmZyYWdtZW50Lm9uQ2hhbmdlKHJldmVhbFNlY3Rpb24pO1xuXG5yZXZlYWxTZWN0aW9uKCk7XG4iXX0=