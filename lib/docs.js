'use strict';

require('fragmented');

require('./easyui-jsx');

var easyui = require('easyui'),
    Element = easyui.Element;


var Contents = require('./docs/sections/contents'),
    Introduction = require('./docs/sections/introduction'),
    JSXIsGreat = require('./docs/sections/jsxIsGreat'),
    GettingStarted = require('./docs/sections/gettingStarted'),
    AppendingElementsToTheDOM = require('./docs/sections/appendingElementsToTheDOM'),
    FunctionalElements = require('./docs/sections/functionalElements'),
    EasyUIElements = require('./docs/sections/easyUIElements'),
    TheRenderMethod = require('./docs/sections/theRenderMethod'),
    ExtendingAnEasyUIClass = require('./docs/sections/extendingAnEasyUIClass'),
    TheExampleOfThisDocumentation = require('./docs/sections/theExampleOfThisDocumentation'),
    TheElementClass = require('./docs/sections/theElementClass'),
    ASimpleForm = require('./docs/sections/aSimpleForm'),
    MoreEasyUIElements = require('./docs/sections/moreEasyUIElements'),
    EasyUILayout = require('./docs/sections/easyUILayout'),
    EasyUIDragAndDrop = require('./docs/sections/easyUIDragAndDrop'),
    EasyUIRichTextarea = require('./docs/sections/easyUIRichTextarea');

var introduction = React.createElement(Introduction, null),
    fragmentToSectionMap = {
  introduction: introduction,
  contents: React.createElement(Contents, null),
  jsxIsGreat: React.createElement(JSXIsGreat, null),
  gettingStarted: React.createElement(GettingStarted, null),
  appendingElementsToTheDOM: React.createElement(AppendingElementsToTheDOM, null),
  functionalElements: React.createElement(FunctionalElements, null),
  easyUIElements: React.createElement(EasyUIElements, null),
  theRenderMethod: React.createElement(TheRenderMethod, null),
  extendingAnEasyUIClass: React.createElement(ExtendingAnEasyUIClass, null),
  theExampleOfThisDocumentation: React.createElement(TheExampleOfThisDocumentation, null),
  theElementClass: React.createElement(TheElementClass, null),
  aSimpleForm: React.createElement(ASimpleForm, null),
  moreEasyUIElements: React.createElement(MoreEasyUIElements, null),
  easyUILayout: React.createElement(EasyUILayout, null),
  easyUIDragAndDrop: React.createElement(EasyUIDragAndDrop, null),
  easyUIRichTextarea: React.createElement(EasyUIRichTextarea, null)
};

var insertSections = function insertSections() {
  var headerDOMElement = document.querySelector('header'),
      header = Element.fromDOMElement(headerDOMElement);

  forEachSection(function (section) {
    section.insertAfter(header);
  });
};

var revealSection = function revealSection() {
  forEachSection(function (section) {
    section.hide();
  });

  var section = fragmentToSectionMap[fragment] || introduction;

  section.show();
};

var forEachSection = function forEachSection(callback) {
  var fragments = Object.keys(fragmentToSectionMap);

  fragments.forEach(function (fragment) {
    var section = fragmentToSectionMap[fragment];

    callback(section);
  });
};

insertSections();

fragment.onChange(revealSection);

revealSection();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9kb2NzLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJFbGVtZW50IiwiZWFzeXVpIiwiQ29udGVudHMiLCJJbnRyb2R1Y3Rpb24iLCJKU1hJc0dyZWF0IiwiR2V0dGluZ1N0YXJ0ZWQiLCJBcHBlbmRpbmdFbGVtZW50c1RvVGhlRE9NIiwiRnVuY3Rpb25hbEVsZW1lbnRzIiwiRWFzeVVJRWxlbWVudHMiLCJUaGVSZW5kZXJNZXRob2QiLCJFeHRlbmRpbmdBbkVhc3lVSUNsYXNzIiwiVGhlRXhhbXBsZU9mVGhpc0RvY3VtZW50YXRpb24iLCJUaGVFbGVtZW50Q2xhc3MiLCJBU2ltcGxlRm9ybSIsIk1vcmVFYXN5VUlFbGVtZW50cyIsIkVhc3lVSUxheW91dCIsIkVhc3lVSURyYWdBbmREcm9wIiwiRWFzeVVJUmljaFRleHRhcmVhIiwiaW50cm9kdWN0aW9uIiwiZnJhZ21lbnRUb1NlY3Rpb25NYXAiLCJjb250ZW50cyIsImpzeElzR3JlYXQiLCJnZXR0aW5nU3RhcnRlZCIsImFwcGVuZGluZ0VsZW1lbnRzVG9UaGVET00iLCJmdW5jdGlvbmFsRWxlbWVudHMiLCJlYXN5VUlFbGVtZW50cyIsInRoZVJlbmRlck1ldGhvZCIsImV4dGVuZGluZ0FuRWFzeVVJQ2xhc3MiLCJ0aGVFeGFtcGxlT2ZUaGlzRG9jdW1lbnRhdGlvbiIsInRoZUVsZW1lbnRDbGFzcyIsImFTaW1wbGVGb3JtIiwibW9yZUVhc3lVSUVsZW1lbnRzIiwiZWFzeVVJTGF5b3V0IiwiZWFzeVVJRHJhZ0FuZERyb3AiLCJlYXN5VUlSaWNoVGV4dGFyZWEiLCJpbnNlcnRTZWN0aW9ucyIsImhlYWRlckRPTUVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJoZWFkZXIiLCJmcm9tRE9NRWxlbWVudCIsImZvckVhY2hTZWN0aW9uIiwic2VjdGlvbiIsImluc2VydEFmdGVyIiwicmV2ZWFsU2VjdGlvbiIsImhpZGUiLCJmcmFnbWVudCIsInNob3ciLCJjYWxsYmFjayIsImZy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QU1KLFVBQVV2QixxQkFBcUIyQixRQUFyQixDQUFoQjs7QUFFQUUsYUFBU04sT0FBVDtBQUNELEdBSkQ7QUFLRCxDQVJEOztBQVVBUDs7QUFFQVcsU0FBU08sUUFBVCxDQUFrQlQsYUFBbEI7O0FBRUFBIiwiZmlsZSI6ImRvY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnJlcXVpcmUoJ2ZyYWdtZW50ZWQnKTtcblxucmVxdWlyZSgnLi9lYXN5dWktanN4Jyk7XG5cbmNvbnN0IGVhc3l1aSA9IHJlcXVpcmUoJ2Vhc3l1aScpLFxuICAgICAgeyBFbGVtZW50IH0gPSBlYXN5dWk7XG5cbmNvbnN0IENvbnRlbnRzID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL2NvbnRlbnRzJyksXG4gICAgICBJbnRyb2R1Y3Rpb24gPSByZXF1aXJlKCcuL2RvY3Mvc2VjdGlvbnMvaW50cm9kdWN0aW9uJyksXG4gICAgICBKU1hJc0dyZWF0ID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL2pzeElzR3JlYXQnKSxcbiAgICAgIEdldHRpbmdTdGFydGVkID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL2dldHRpbmdTdGFydGVkJyksXG4gICAgICBBcHBlbmRpbmdFbGVtZW50c1RvVGhlRE9NID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL2FwcGVuZGluZ0VsZW1lbnRzVG9UaGVET00nKSxcbiAgICAgIEZ1bmN0aW9uYWxFbGVtZW50cyA9IHJlcXVpcmUoJy4vZG9jcy9zZWN0aW9ucy9mdW5jdGlvbmFsRWxlbWVudHMnKSxcbiAgICAgIEVhc3lVSUVsZW1lbnRzID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL2Vhc3lVSUVsZW1lbnRzJyksXG4gICAgICBUaGVSZW5kZXJNZXRob2QgPSByZXF1aXJlKCcuL2RvY3Mvc2VjdGlvbnMvdGhlUmVuZGVyTWV0aG9kJyksXG4gICAgICBFeHRlbmRpbmdBbkVhc3lVSUNsYXNzID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL2V4dGVuZGluZ0FuRWFzeVVJQ2xhc3MnKSxcbiAgICAgIFRoZUV4YW1wbGVPZlRoaXNEb2N1bWVudGF0aW9uID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL3RoZUV4YW1wbGVPZlRoaXNEb2N1bWVudGF0aW9uJyksXG4gICAgICBUaGVFbGVtZW50Q2xhc3MgPSByZXF1aXJlKCcuL2RvY3Mvc2VjdGlvbnMvdGhlRWxlbWVudENsYXNzJyksXG4gICAgICBBU2ltcGxlRm9ybSA9IHJlcXVpcmUoJy4vZG9jcy9zZWN0aW9ucy9hU2ltcGxlRm9ybScpLFxuICAgICAgTW9yZUVhc3lVSUVsZW1lbnRzID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL21vcmVFYXN5VUlFbGVtZW50cycpLFxuICAgICAgRWFzeVVJTGF5b3V0ID0gcmVxdWlyZSgnLi9kb2NzL3NlY3Rpb25zL2Vhc3lVSUxheW91dCcpLFxuICAgICAgRWFzeVVJRHJhZ0FuZERyb3AgPSByZXF1aXJlKCcuL2RvY3Mvc2VjdGlvbnMvZWFzeVVJRHJhZ0FuZERyb3AnKSxcbiAgICAgIEVhc3lVSVJpY2hUZXh0YXJlYSA9IHJlcXVpcmUoJy4vZG9jcy9zZWN0aW9ucy9lYXN5VUlSaWNoVGV4dGFyZWEnKTtcblxuY29uc3QgaW50cm9kdWN0aW9uID0gPEludHJvZHVjdGlvbiAvPixcbiAgICAgIGZyYWdtZW50VG9TZWN0aW9uTWFwID0ge1xuICAgICAgICBpbnRyb2R1Y3Rpb246IGludHJvZHVjdGlvbixcbiAgICAgICAgY29udGVudHM6IDxDb250ZW50cyAvPixcbiAgICAgICAganN4SXNHcmVhdDogPEpTWElzR3JlYXQgLz4sXG4gICAgICAgIGdldHRpbmdTdGFydGVkOiA8R2V0dGluZ1N0YXJ0ZWQgLz4sXG4gICAgICAgIGFwcGVuZGluZ0VsZW1lbnRzVG9UaGVET006IDxBcHBlbmRpbmdFbGVtZW50c1RvVGhlRE9NIC8+LFxuICAgICAgICBmdW5jdGlvbmFsRWxlbWVudHM6IDxGdW5jdGlvbmFsRWxlbWVudHMgLz4sXG4gICAgICAgIGVhc3lVSUVsZW1lbnRzOiA8RWFzeVVJRWxlbWVudHMgLz4sXG4gICAgICAgIHRoZVJlbmRlck1ldGhvZDogPFRoZVJlbmRlck1ldGhvZCAvPixcbiAgICAgICAgZXh0ZW5kaW5nQW5FYXN5VUlDbGFzczogPEV4dGVuZGluZ0FuRWFzeVVJQ2xhc3MgLz4sXG4gICAgICAgIHRoZUV4YW1wbGVPZlRoaXNEb2N1bWVudGF0aW9uOiA8VGhlRXhhbXBsZU9mVGhpc0RvY3VtZW50YXRpb24gLz4sXG4gICAgICAgIHRoZUVsZW1lbnRDbGFzczogPFRoZUVsZW1lbnRDbGFzcyAvPixcbiAgICAgICAgYVNpbXBsZUZvcm06IDxBU2ltcGxlRm9ybSAvPixcbiAgICAgICAgbW9yZUVhc3lVSUVsZW1lbnRzOiA8TW9yZUVhc3lVSUVsZW1lbnRzIC8+LFxuICAgICAgICBlYXN5VUlMYXlvdXQ6IDxFYXN5VUlMYXlvdXQgLz4sXG4gICAgICAgIGVhc3lVSURyYWdBbmREcm9wOiA8RWFzeVVJRHJhZ0FuZERyb3AgLz4sXG4gICAgICAgIGVhc3lVSVJpY2hUZXh0YXJlYTogPEVhc3lVSVJpY2hUZXh0YXJlYSAvPlxuICAgICAgfTtcblxuY29uc3QgaW5zZXJ0U2VjdGlvbnMgPSAoKSA9PiB7XG4gIGNvbnN0IGhlYWRlckRPTUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoZWFkZXInKSxcbiAgICAgICAgaGVhZGVyID0gRWxlbWVudC5mcm9tRE9NRWxlbWVudChoZWFkZXJET01FbGVtZW50KTtcblxuICBmb3JFYWNoU2VjdGlvbigoc2VjdGlvbikgPT4ge1xuICAgIHNlY3Rpb24uaW5zZXJ0QWZ0ZXIoaGVhZGVyKTtcbiAgfSk7XG59O1xuXG5jb25zdCByZXZlYWxTZWN0aW9uID0gKCkgPT4ge1xuICBmb3JFYWNoU2VjdGlvbigoc2VjdGlvbikgPT4ge1xuICAgIHNlY3Rpb24uaGlkZSgpO1xuICB9KTtcblxuICBjb25zdCBzZWN0aW9uID0gZnJhZ21lbnRUb1NlY3Rpb25NYXBbZnJhZ21lbnRdIHx8IGludHJvZHVjdGlvbjtcblxuICBzZWN0aW9uLnNob3coKTtcbn07XG5cbmNvbnN0IGZvckVhY2hTZWN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gIGNvbnN0IGZyYWdtZW50cyA9IE9iamVjdC5rZXlzKGZyYWdtZW50VG9TZWN0aW9uTWFwKTtcblxuICBmcmFnbWVudHMuZm9yRWFjaCgoZnJhZ21lbnQpID0+IHtcbiAgICBjb25zdCBzZWN0aW9uID0gZnJhZ21lbnRUb1NlY3Rpb25NYXBbZnJhZ21lbnRdO1xuXG4gICAgY2FsbGJhY2soc2VjdGlvbik7XG4gIH0pO1xufTtcblxuaW5zZXJ0U2VjdGlvbnMoKTtcblxuZnJhZ21lbnQub25DaGFuZ2UocmV2ZWFsU2VjdGlvbik7XG5cbnJldmVhbFNlY3Rpb24oKTtcbiJdfQ==